from pyformlang.cfg import CFG

__all__ = [
    "cyk",
]


def cyk(s: str, cfg: CFG) -> bool:
    """Check the word belongs to the language generated by the given CFG using CYK algorithm

    Args:
        s(str): Word to be checked
        cfg(CFG): Context Free Grammar

    Returns:
        Whether word belongs to the language generated by CFG or not
    """
    if not s:
        return cfg.generate_epsilon()

    terminals, non_terminals = (
        [p for p in cfg.to_normal_form().productions if len(p.body) == body_length]
        for body_length in (1, 2)
    )
    n = len(s)
    table = [[set() for _ in range(n)] for _ in range(n)]

    for i, c in enumerate(s):
        table[i][i] = set(p.head for p in terminals if p.body[0].value == c)

    for step in range(1, n):
        for i in range(n - step):
            j = i + step
            for k in range(i, j):
                table[i][j] |= set(
                    p.head
                    for p in non_terminals
                    if p.body[1] in table[k + 1][j] and p.body[0] in table[i][k]
                )

    return cfg.start_symbol in table[0][n - 1]
